//——————————————————————————————————————————————————————————————————————————————
// Common Design: Soft Footer
//
// Optional space for a CTA, newsletter sign-up, etc
//——————————————————————————————————————————————————————————————————————————————

.cd-soft-footer {

  // Between all our browsers and both reading directions, the separators can't
  // seem to be placed identically, so occasionally we're making them be wider
  // than the viewport itself to ensure edge-to-edge coverage. Make sure this
  // doesn't disrupt the page layout by hiding any overflow.
  overflow: hidden;

  // Set our padding based on design feedback. Value is a magic number based on
  // the visual border of the logos and separators. If the visual appearance is
  // not 28px when screenshotting and measuring, then change this until that
  // outcome is achieved.
  padding: 18px 0;
  color: $cd-black;
  border-top: 1px solid $implementation-primary;
  background: $cd-white;
  font-family: $gho-font--arabic;

  a {
    color: inherit;

    &:focus {
      outline: 3px solid $implementation-primary;
    }
  }
}

.cd-soft-footer__inner {
  // CD defaults are good but let's override all for our design
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
}

.cd-soft-footer__button {
  background: $implementation-primary;

  &:hover,
  &:focus {
    background: darken($implementation-primary, 5%);
  }
}

.cd-soft-footer .block {
  position: relative;
  padding: 0 1rem;
  text-align: center;
}

@mixin cd-sf-separator {
  &::before {
    position: absolute;
    top: 10px;
    bottom: 10px;
    width: 1px;
    content: "";
    background: $implementation-primary;

    [dir="ltr"] & {
      left: -0.5rem;
    }

    [dir="rtl"] & {
      right: -0.5rem;
    }
  }
}

.cd-soft-footer .block-soft-footer-acknowledgements {
  position: relative;

  // Layout of this component
  display: flex;
  // Within soft footer
  flex: 0 1 100%;
  flex-flow: column nowrap;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 2rem;

  // Mobile separator
  &::after {
    position: absolute;
    right: -50%;
    bottom: 0;
    left: -50%;
    height: 1px;
    content: "";
    background: $implementation-primary;
  }

  img {
    // original dimensions: 42x60
    width: 42px;
    height: 60px;
    //          visual-height - SVG height / 2
    margin-top: calc((42px - 60px) / 2);
  }

  p {
    max-width: 420px;
    margin: 0;
    text-align: center;
    font-size: 0.875em;
    font-weight: 900;
  }

  a,
  a:link,
  a:focus,
  a:active {
    color: $gho-link-color;
  }
}

.cd-soft-footer .block-soft-footer-fts {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 1;
  width: 45%;

  [dir="ltr"] & {
    padding-right: 1rem;
    text-align: right;
  }

  [dir="rtl"] & {
    padding-left: 1rem;
    text-align: left;
  }

  img {
    // original dimensions: 438x200
    width: 100px;
    height: 60px;
  }
}

.cd-soft-footer .block-soft-footer-huminsight {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 1;
  width: 45%;

  [dir="ltr"] & {
    text-align: left;
    border-left: 1px solid $implementation-primary;
  }

  [dir="rtl"] & {
    text-align: right;
    border-right: 1px solid $implementation-primary;
  }

  img {
    // original dimensions: 223.24x61.4
    //
    // These dimensions selected purely to make it look good, despite the image
    // heights differing between boxes. It takes the whitespace of the SVG into
    // account.
    width: 135px;
    height: 37.1px;
  }
}
